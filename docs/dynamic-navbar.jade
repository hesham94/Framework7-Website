extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = '动态导航栏 | Framework7 文档';

block content
  .docs-demo-device
    iframe(width="320", height="548", frameborder="0", scrolling="on")
    .fade-overlay
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content.with-device
      .full-width
        h1 动态导航栏
        p.ios-only Dynamic Navbar is supported only in iOS Theme
        p iOS7的好评特性之一是动态导航栏。当页面过渡时，导航栏元素会滑动渐变。
        .important-note
          ul
            li 
              p 它只对穿透类型的布局有效
            li 
              p 它应该在<a href="views.html">视图初始化</a>时通过传递<strong>dynamicNavbar: true</strong>参数来启用

        h2 动态导航栏布局
        p 动态导航栏和一般的导航栏是一样的，区别只在于，你可以对导航栏的组成部分（左、中、右）加入额外的类，来说明使用哪个过渡特效。
        .important-note
          ul
            li
              p 默认情况下（如果没有额外的类），每个导航栏部分都具有<b>"渐变"</b>过渡特效
            li
              p 如果你向任何一个导航栏部分添加<b>"sliding"</b>类，它会具有<b>"滑动"</b>特效
            li
              p 为了美观起见，在不同的页面之间，你应当保持同一个过渡类型
      h3(data-device-preview="../docs-demos/dynamic-navbar-fade.html") 默认(渐变)过渡
      pre
        code
          | &lt;!-- Navbar on index page --&gt;
          | &lt;div class="navbar"&gt;
          |     &lt;div class="navbar-inner"&gt;
          |         &lt;div class="left"&gt;
          |             &lt;a href="#" class="link"&gt;Home Left&lt;/a&gt;
          |         &lt;/div&gt;
          |         &lt;div class="center"&gt;Home&lt;/div&gt;
          |         &lt;div class="right"&gt;
          |             &lt;a href="#" class="link"&gt;Home Right&lt;/a&gt;
          |         &lt;/div&gt;
          |     &lt;/div&gt;
          | &lt;/div&gt;
          | 
          | &lt;!-- Navbar on about page --&gt;
          | &lt;div class="navbar"&gt;
          |     &lt;div class="navbar-inner"&gt;
          |         &lt;div class="left"&gt;
          |             &lt;a href="#" class="link"&gt;About Left&lt;/a&gt;
          |         &lt;/div&gt;
          |         &lt;div class="center"&gt;About&lt;/div&gt;
          |         &lt;div class="right"&gt;
          |             &lt;a href="#" class="link"&gt;About Right&lt;/a&gt;
          |         &lt;/div&gt;
          |     &lt;/div&gt;
          | &lt;/div&gt;
      h3(data-device-preview="../docs-demos/dynamic-navbar-sliding.html") 滑动过渡
      p 滑动过渡应该明智使用，因为它们反映了应用的导航链。
      pre
        code
          | &lt;!-- Navbar on index page --&gt;
          | &lt;div class="navbar"&gt;
          |     &lt;div class="navbar-inner"&gt;
          |         &lt;!-- Left part doesn't related to other pages, let's fade it out --&gt;
          |         &lt;div class="left"&gt;
          |             &lt;a href="#" class="link"&gt;Home Left&lt;/a&gt;
          |         &lt;/div&gt;
          | 
          |         &lt;!-- Center and Right parts reflect page title and page links, let's slide them --&gt;
          |         &lt;div class="center sliding"&gt;Home&lt;/div&gt;
          |         &lt;div class="right sliding"&gt;
          |             &lt;a href="about.html" class="link"&gt;About&lt;/a&gt;
          |         &lt;/div&gt;
          |     &lt;/div&gt;
          | &lt;/div&gt;
          | 
          | &lt;!-- Navbar on about page --&gt;
          | &lt;div class="navbar"&gt;
          |     &lt;div class="navbar-inner"&gt;
          |         &lt;!-- Now, Left and Center parts reflect page title and page links, let's slide them --&gt;
          |         &lt;div class="left sliding"&gt;
          |             &lt;a href="#" class="link back"&gt;Home&lt;/a&gt;
          |         &lt;/div&gt;
          |         &lt;div class="center sliding"&gt;About&lt;/div&gt;
          | 
          |         &lt;!-- Right part doesn't related to other pages --&gt;
          |         &lt;div class="right"&gt;
          |             &lt;a href="#" class="link icon-only"&gt;
          |                 &lt;i class="icon icon-bars"&gt;&lt;/i&gt;
          |             &lt;/a&gt;
          |         &lt;/div&gt;
          |     &lt;/div&gt;
          | &lt;/div&gt;
      .full-width.stop-scroll-device
        h3 返回链接图标动画化
        p 如果你使用了默认的返回链接（图标+“返回”），你可以使用额外的动画，以使这些链接看起来更像iOS 7外观。为了做到这一点，你需要在<a href="init-app.html">App初始化</a>时添加<code>animateNavBackIcon: true</code>参数，然后把含有“back”类和图标的链接放到导航栏的左部。布局方面没有变化，例子如下：
        h3 Demos
        .row
          .col-50 
            h4 Usual Sliding
            .docs-demo-device.docs-inline-device
              iframe(width="320", height="548", frameborder="0", scrolling="on", src="../docs-demos/dynamic-navbar-nobacklink.html")
          .col-50 
            h4 With animateNavBackIcon
            .docs-demo-device.docs-inline-device
              iframe(width="320", height="548", frameborder="0", scrolling="on", src="../docs-demos/dynamic-navbar-backlink.html")
          .clearfix
        .device-spacer(style="height:50px")
        h2 Dynamic Navbar Events
        p Dynamic navbar has the following events:
        table.events-table
          thead
            tr
              th Event
              th Target
              th Description
          tbody
            tr
              td navbarBeforeInit
              td Navbar Inner element <span>&lt;div class="navbar-inner"&gt;</span>
              td Event will be triggered when Framework7 just inserts new navbar inner to DOM
            tr
              td navbarInit
              td Navbar Inner element <span>&lt;div class="navbar-inner"&gt;</span>
              td Event will be triggered after Framework7 initialize navbar
            tr
              td navbarReinit
              td Navbar Inner element <span>&lt;div class="navbar-inner"&gt;</span>
              td This event will be triggered when cached navbar inner becomes visible. It is only applicaple for Inline Pages (DOM cached pages)
            tr
              td navbarBeforeRemove
              td Navbar Inner element <span>&lt;div class="navbar-inner"&gt;</span>
              td Event will be triggered right before navbar inner will be removed from DOM. This event could be very useful if you need to detach some events / destroy some plugins to free memory
        p Each event data containes useful information with <code>navbar</code> elements and <a href="pages.html#page-data">Page Data</a> of related page. For example
        pre
          code.js
            | $$(document).on('navbarInit', function (e) {
            |   var navbar = e.detail.navbar;
            |   var page = e.detail.page
            | });
        p Now, in the example above we have initialized Navbar elements in <code>navbar</code> variable and related  Page Data in <code>page</code> variable. Lets look on properties of <code>navbar</code> object:
        table.methods-table
          tbody
            tr
              th(colspan="2") Navbar Properties
            tr
              td navbar.navbarContainer
              td Link to parent Navbar <span class="parameter-type">HTMLElement</span>
            tr
              td navbar.navbarInnerContainer
              td Link to target Navbar Inner <span class="parameter-type">HTMLElement</span>
