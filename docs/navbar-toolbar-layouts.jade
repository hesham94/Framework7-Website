extends ../jade/_internal-template

block vars
  - var activeLink = 'docs';
  - var title = '导航栏&工具栏布局 | Framework7 文档';

block content
  .docs-demo-device
    iframe(width="320", height="548", frameborder="0", scrolling="on")
    .fade-overlay
  .docs-wrap
    .docs-nav
      include ../jade/_docs-menu
    .docs-content.with-device
      h1 导航栏&工具栏布局
      p 在向应用添加导航栏和工具栏之前，我们需要决定使用哪种布局。
      p Framework7在这方面很自由，有3种不同类型的导航栏/工具栏布局，它们对应着在页面/视图中的不同位置。
      h2(data-device-preview="../docs-demos/bars-static-index.html") 静态布局
      p 静态布局可能是最少使用的布局。在这种情况下，导航栏和工具栏只是可以滚动的页面内容的一部分，每个页面都有它自己的导航栏和工具栏：
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="views"&gt;
          |     &lt;div class="view view-main"&gt;
          |       &lt;div class="pages"&gt;
          |         &lt;div data-page="index" class="page"&gt;
          |           &lt;div class="page-content"&gt;
          |             
          |             &lt;!-- Top Navbar--&gt;
          |             &lt;div class="navbar"&gt;
          |               &lt;div class="navbar-inner"&gt;
          |                 &lt;div class="center"&gt;Awesome App&lt;/div&gt;
          |               &lt;/div&gt;
          |             &lt;/div&gt;
          |             &lt;!-- /End of Top Navbar--&gt;
          |             
          |             &lt;p&gt;Other content goes here&lt;/p&gt;
          |             ...
          |             
          |             &lt;!-- Bottom Toolbar--&gt;
          |             &lt;div class="toolbar"&gt;
          |               &lt;div class="toolbar-inner"&gt;
          |                 Hello
          |               &lt;/div&gt;
          |             &lt;/div&gt;          
          |             &lt;!-- /End of Bottom Toolbar--&gt;
          |             
          |           &lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/div&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;
      h2(data-device-preview="../docs-demos/bars-fixed-index.html") 固定布局
      p 在固定布局中，也是每个页面都有它自己的导航栏和工具栏，但是它们在屏幕上始终可见，不会随着页面内容滚动：
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="views"&gt;
          |     &lt;div class="view view-main"&gt;
          |       &lt;div class="pages"&gt;
          |         &lt;!-- Now we need additional "navbar-fixed" and "toolbar-fixed" classes on Page --&gt;
          |         &lt;div data-page="index" class="page navbar-fixed toolbar-fixed"&gt;
          |             
          |           &lt;!-- Top Navbar--&gt;
          |           &lt;div class="navbar"&gt;
          |             &lt;div class="navbar-inner"&gt;
          |               &lt;div class="center"&gt;Awesome App&lt;/div&gt;
          |             &lt;/div&gt;
          |           &lt;/div&gt;
          |           &lt;!-- /End of Top Navbar--&gt;
          | 
          |           &lt;div class="page-content"&gt;
          |             &lt;p&gt;Other content goes here&lt;/p&gt;
          |             ...
          |           &lt;/div&gt;
          |             
          |           &lt;!-- Bottom Toolbar--&gt;
          |           &lt;div class="toolbar"&gt;
          |             &lt;div class="toolbar-inner"&gt;
          |               Hello
          |             &lt;/div&gt;
          |           &lt;/div&gt;          
          |           &lt;!-- /End of Bottom Toolbar--&gt;
          |             
          |         &lt;/div&gt;
          |       &lt;/div&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;
      p 正如你所见，与静态布局相比，固定布局的不同之处在于：
      ul
        li
          p 导航栏和工具栏是Page的子元素(<code>&lt;div class="page"&gt;</code>)
        li
          p 每个页面拥有额外的“navbar-fixed”类（对于固定导航栏）和“toolbar-fixed”类（对于固定工具栏）
      p
        strong 注意，如果你想要对单视图中的每个页面使用固定布局，可以直接在父页面(<code>&lt;div class="pages"&gt;</code>)上添加“navbar-fixed”和“toolbar-fixed”类，而不是对每个单页面分别添加。
      h2(data-device-preview="../docs-demos/bars-through-index.html") 穿透布局
      p.ios-only This type of layout is only supported by iOS theme
      p 这是最有趣，最被广泛使用的布局 —— 在不同页面间切换时，导航栏和工具栏保持不变。通过这种布局，可以实现酷炫的<strong>动态导航</strong>（不要忘记在视图初始化的时候启用它）。<a href="views.html">视图初始化</a>)
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="views"&gt;
          |     &lt;div class="view view-main"&gt;
          |             
          |       &lt;!-- Top Navbar--&gt;
          |       &lt;div class="navbar"&gt;
          |         &lt;div class="navbar-inner"&gt;
          |           &lt;div class="center"&gt;Awesome App&lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/div&gt;
          |       &lt;!-- /End of Top Navbar--&gt;          
          |             
          |       &lt;!-- Now we need additional "navbar-through" and "toolbar-through" classes on Pages --&gt;
          |       &lt;div class="pages navbar-through toolbar-through"&gt;
          |         &lt;div data-page="index" class="page"&gt;
          |           &lt;div class="page-content"&gt;
          |             &lt;p&gt;Other content goes here&lt;/p&gt;
          |             ...
          |           &lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/div&gt;
          |             
          |       &lt;!-- Bottom Toolbar--&gt;
          |       &lt;div class="toolbar"&gt;
          |         &lt;div class="toolbar-inner"&gt;
          |           Hello
          |         &lt;/div&gt;
          |       &lt;/div&gt;          
          |       &lt;!-- /End of Bottom Toolbar--&gt;
          |             
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;
      p 正如你所见，与静态和固定布局相比，穿透布局的不同之处在于：
      ul
        li 
          p 导航栏和工具栏是视图的子元素(<code>&lt;div class="view"&gt;</code>)
        li
          p 具有穿透布局的导航栏和工具栏的视图拥有额外的“navbar-through”类（对于穿透类型的导航栏）和"toolbar-through"类（对于穿透类型的工具栏）。
      
      h2(data-device-preview="../docs-demos/bars-mixed-index.html") 混合布局
      p 对于不同的视图，你可以使用不同的布局，比如在一个视图中使用固定布局，在另一个中使用穿透布局。其实，你也可以在单视图中混合使用这些布局。例如，你可以使用穿透的导航栏和固定的工具栏：
      pre
        code
          | &lt;body&gt;
          |   ...
          |   &lt;div class="views"&gt;
          |     &lt;div class="view view-main"&gt;
          |             
          |       &lt;!-- Top Navbar--&gt;
          |       &lt;div class="navbar"&gt;
          |         &lt;div class="navbar-inner"&gt;
          |           &lt;div class="center"&gt;Awesome App&lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/div&gt;
          |       &lt;!-- /End of Top Navbar--&gt;          
          |             
          |       &lt;!-- Now we need additional "navbar-through" and "toolbar-fixed" classes on Pages --&gt;
          |       &lt;div class="pages navbar-through fixed-through"&gt;
          |         &lt;div data-page="index" class="page"&gt;
          |           &lt;div class="page-content"&gt;
          |             &lt;p&gt;Other content goes here&lt;/p&gt;
          |             ...
          |           &lt;/div&gt;
          | 
          |           &lt;!-- Bottom Toolbar--&gt;
          |           &lt;div class="toolbar"&gt;
          |             &lt;div class="toolbar-inner"&gt;
          |               Hello
          |             &lt;/div&gt;
          |           &lt;/div&gt;          
          |           &lt;!-- /End of Bottom Toolbar--&gt;
          | 
          |         &lt;/div&gt;
          |       &lt;/div&gt;
          |     &lt;/div&gt;
          |   &lt;/div&gt;
          |   ...
          | &lt;/body&gt;
      h2.stop-scroll-device 无导航栏/工具栏
      p 当然，如果你不需要导航栏或工具栏，你大可不必包含它们，并且不用在page/pages/view中添加相应的类（“"navbar-fixed”，“navbar-through”，“toolbar-fixed”，“toolbar-through”）

      h2 速记表
      p 正如你所见，这些布局都很容易理解，不同之处在于父元素上额外添加的类，以及不同的嵌套层级。下面是速记表
      h4 静态
      pre
        code
          | .view   
          |   .pages    
          |     .page   
          |       .page-content   
          |         .navbar   
          |         // other page content
          |         .toolbar    
      h4 固定
      pre
        code
          | .view
          |   .pages.navbar-fixed.navbar-through
          |     .page
          |       .navbar
          |       .page-content
          |       .toolbar
      h4 穿透
      pre
        code
          | .view
          |   .navbar
          |   .pages.navbar-through.toolbar-through
          |     .page
          |       .page-content
          |   .toolbar
